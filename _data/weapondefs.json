{
  "WeaponDefs": {
    "name": {
      "internalName": "description",
      "description": "The descriptive name of the weapon as listed in FPS mode.",
      "defaultValue": Weapon,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "weaponType": {
      "internalName": "type",
      "defaultValue": Cannon,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "customParams": {
      "type": "table"
    },
    "avoidFriendly": {
      "defaultValue": 1,
      "type": "bool"
    },
    "avoidFeature": {
      "defaultValue": 1,
      "type": "bool"
    },
    "avoidNeutral": {
      "defaultValue": 0,
      "type": "bool"
    },
    "avoidGround": {
      "defaultValue": 1,
      "type": "bool"
    },
    "avoidCloaked": {
      "defaultValue": 0,
      "type": "bool"
    },
    "collideEnemy": {
      "defaultValue": 1,
      "type": "bool"
    },
    "collideFriendly": {
      "defaultValue": 1,
      "type": "bool"
    },
    "collideFeature": {
      "defaultValue": 1,
      "type": "bool"
    },
    "collideNeutral": {
      "defaultValue": 1,
      "type": "bool"
    },
    "collideGround": {
      "defaultValue": 1,
      "type": "bool"
    },
    "damage": {
      "type": "table"
    },
    "damage.default": {
      "defaultValue": 1,
      "type": "float"
    },
    "size": {
      "type": "float"
    },
    "explosionSpeed": {
      "type": "float"
    },
    "impactOnly": {
      "defaultValue": 0,
      "type": "bool"
    },
    "noSelfDamage": {
      "defaultValue": 0,
      "type": "bool"
    },
    "noExplode": {
      "defaultValue": 0,
      "type": "bool"
    },
    "burnblow": {
      "internalName": "selfExplode",
      "defaultValue": 0,
      "type": "bool"
    },
    "damageAreaOfEffect": {
      "fallbackName": "areaOfEffect",
      "defaultValue": 8,
      "scaleValue": 0.5,
      "scaleValueString": "0.5f",
      "type": "float"
    },
    "edgeEffectiveness": {
      "defaultValue": 0,
      "maximumValue": 1,
      "type": "float"
    },
    "collisionSize": {
      "defaultValue": 0.05,
      "type": "float"
    },
    "weaponVelocity": {
      "internalName": "projectilespeed",
      "fallbackName": "maxVelocity",
      "defaultValue": 0,
      "minimumValue": 0.01,
      "scaleValue": 0.0333333,
      "scaleValueString": "1.0f / GAME_SPEED",
      "type": "float"
    },
    "startvelocity": {
      "defaultValue": 0,
      "minimumValue": 0.01,
      "scaleValue": 0.0333333,
      "scaleValueString": "1.0f / GAME_SPEED",
      "type": "float"
    },
    "weaponacceleration": {
      "fallbackName": "acceleration",
      "defaultValue": 0,
      "scaleValue": 0.00111111,
      "scaleValueString": "1.0f / (GAME_SPEED * GAME_SPEED)",
      "type": "float"
    },
    "reloadTime": {
      "internalName": "reload",
      "defaultValue": 1,
      "type": "float"
    },
    "burstRate": {
      "internalName": "salvodelay",
      "defaultValue": 0.1,
      "type": "float"
    },
    "burst": {
      "internalName": "salvosize",
      "defaultValue": 1,
      "type": "int"
    },
    "projectiles": {
      "internalName": "projectilespershot",
      "defaultValue": 1,
      "type": "int"
    },
    "waterBounce": {
      "defaultValue": 0,
      "type": "bool"
    },
    "groundBounce": {
      "defaultValue": 0,
      "type": "bool"
    },
    "bounceSlip": {
      "defaultValue": 1,
      "type": "float"
    },
    "bounceRebound": {
      "defaultValue": 1,
      "type": "float"
    },
    "numBounce": {
      "defaultValue": -1,
      "type": "int"
    },
    "impulseFactor": {
      "defaultValue": 1,
      "type": "float"
    },
    "impulseBoost": {
      "defaultValue": 0,
      "type": "float"
    },
    "craterMult": {
      "fallbackName": "impulseFactor",
      "defaultValue": 1,
      "type": "float"
    },
    "craterBoost": {
      "defaultValue": 0,
      "type": "float"
    },
    "craterAreaOfEffect": {
      "fallbackName": "areaOfEffect",
      "defaultValue": 8,
      "scaleValue": 0.5,
      "scaleValueString": "0.5f",
      "type": "float"
    },
    "waterweapon": {
      "defaultValue": 0,
      "type": "bool"
    },
    "submissile": {
      "defaultValue": 0,
      "type": "bool"
    },
    "fireSubmersed": {
      "fallbackName": "waterweapon",
      "defaultValue": 0,
      "type": "bool"
    },
    "commandfire": {
      "internalName": "manualfire",
      "defaultValue": 0,
      "type": "bool"
    },
    "range": {
      "defaultValue": 10,
      "type": "float"
    },
    "heightmod": {
      "defaultValue": 0.2,
      "type": "float"
    },
    "targetBorder": {
      "defaultValue": 0,
      "minimumValue": -1,
      "maximumValue": 1,
      "type": "float"
    },
    "cylinderTargeting": {
      "fallbackName": "cylinderTargetting",
      "defaultValue": 0,
      "minimumValue": 0,
      "maximumValue": 128,
      "type": "float"
    },
    "turret": {
      "description": "Does the unit aim within an arc (up-to and including full 360Â° turret traverse) or always aim along the owner's heading?",
      "defaultValue": 0,
      "type": "bool"
    },
    "fixedLauncher": {
      "defaultValue": 0,
      "type": "bool"
    },
    "tolerance": {
      "internalName": "maxAngle",
      "defaultValue": 3000,
      "scaleValue": 9.58738e-05,
      "scaleValueString": "TAANG2RAD",
      "type": "float"
    },
    "firetolerance": {
      "internalName": "maxFireAngle",
      "defaultValue": 3640,
      "scaleValue": 9.58738e-05,
      "scaleValueString": "TAANG2RAD",
      "type": "float"
    },
    "highTrajectory": {
      "defaultValue": 2,
      "type": "int"
    },
    "trajectoryHeight": {
      "defaultValue": 0,
      "type": "float"
    },
    "tracks": {
      "defaultValue": 0,
      "type": "bool"
    },
    "wobble": {
      "defaultValue": 0,
      "scaleValue": 3.19579e-06,
      "scaleValueString": "float(TAANG2RAD) / GAME_SPEED",
      "type": "float"
    },
    "dance": {
      "defaultValue": 0,
      "scaleValue": 0.0333333,
      "scaleValueString": "1.0f / GAME_SPEED",
      "type": "float"
    },
    "gravityAffected": {
      "defaultValue": 0,
      "type": "bool"
    },
    "myGravity": {
      "defaultValue": 0,
      "type": "float"
    },
    "canAttackGround": {
      "defaultValue": 1,
      "type": "bool"
    },
    "weaponTimer": {
      "internalName": "uptime",
      "defaultValue": 0,
      "type": "float"
    },
    "flighttime": {
      "description": "Flighttime of missiles in seconds.",
      "defaultValue": 0,
      "scaleValue": 30,
      "scaleValueString": "GAME_SPEED",
      "type": "float"
    },
    "turnrate": {
      "defaultValue": 0,
      "scaleValue": 3.19579e-06,
      "scaleValueString": "float(TAANG2RAD) / GAME_SPEED",
      "type": "float"
    },
    "heightBoostFactor": {
      "defaultValue": -1,
      "type": "float"
    },
    "proximityPriority": {
      "defaultValue": 1,
      "type": "float"
    },
    "allowNonBlockingAim": {
      "description": "When false, the weapon is blocked from firing until AimWeapon() returns.",
      "defaultValue": 0,
      "type": "bool"
    },
    "accuracy": {
      "defaultValue": 0,
      "tagFunction": "math::sin(x * math::PI / 0xafff)",
      "type": "float"
    },
    "sprayAngle": {
      "defaultValue": 0,
      "tagFunction": "math::sin(x * math::PI / 0xafff)",
      "type": "float"
    },
    "movingAccuracy": {
      "fallbackName": "accuracy",
      "defaultValue": 0,
      "tagFunction": "math::sin(x * math::PI / 0xafff)",
      "type": "float"
    },
    "targetMoveError": {
      "defaultValue": 0,
      "type": "float"
    },
    "leadLimit": {
      "defaultValue": -1,
      "type": "float"
    },
    "leadBonus": {
      "defaultValue": 0,
      "type": "float"
    },
    "predictBoost": {
      "defaultValue": 0,
      "type": "float"
    },
    "ownerExpAccWeight": {
      "type": "float"
    },
    "minIntensity": {
      "description": "The minimum percentage the weapon's damage can fall-off to over its range. Setting to 1.0 will disable fall off entirely. Unrelated to the visual-only intensity tag.",
      "defaultValue": 0,
      "type": "float"
    },
    "duration": {
      "defaultValue": 0.05,
      "type": "float"
    },
    "beamtime": {
      "defaultValue": 1,
      "type": "float"
    },
    "beamburst": {
      "defaultValue": 0,
      "type": "bool"
    },
    "beamTTL": {
      "internalName": "beamLaserTTL",
      "defaultValue": 0,
      "type": "int"
    },
    "sweepFire": {
      "description": "Makes BeamLasers continue firing while aiming for a new target, 'sweeping' across the terrain.",
      "defaultValue": 0,
      "type": "bool"
    },
    "largeBeamLaser": {
      "defaultValue": 0,
      "type": "bool"
    },
    "sizeGrowth": {
      "defaultValue": 0.5,
      "type": "float"
    },
    "flameGfxTime": {
      "type": "float"
    },
    "metalPerShot": {
      "internalName": "metalcost",
      "defaultValue": 0,
      "type": "float"
    },
    "energyPerShot": {
      "internalName": "energycost",
      "defaultValue": 0,
      "type": "float"
    },
    "fireStarter": {
      "description": "The percentage chance of the weapon setting fire to static map features on impact.",
      "defaultValue": 0,
      "minimumValue": 0,
      "scaleValue": 0.01,
      "scaleValueString": "0.01f",
      "type": "float"
    },
    "paralyzer": {
      "description": "Is the weapon a paralyzer? If true the weapon only stuns enemy units and does not cause damage in the form of lost hit-points.",
      "defaultValue": 0,
      "type": "bool"
    },
    "paralyzeTime": {
      "description": "Determines the maximum length of time in seconds that the target will be paralyzed. The timer is restarted every time the target is hit by the weapon. Cannot be less than 0.",
      "defaultValue": 10,
      "minimumValue": 0,
      "type": "int"
    },
    "stockpile": {
      "description": "Does each round of the weapon have to be built and stockpiled by the player? Will only correctly function for the first of each stockpiled weapons a unit has.",
      "defaultValue": 0,
      "type": "bool"
    },
    "stockpileTime": {
      "fallbackName": "reload",
      "description": "The time in seconds taken to stockpile one round of the weapon.",
      "defaultValue": 1,
      "scaleValue": 30,
      "scaleValueString": "GAME_SPEED",
      "type": "float"
    },
    "targetable": {
      "description": "Bitmask representing the types of weapon that can intercept this weapon. Each digit of binary that is set to one means that a weapon with the corresponding digit in its interceptor tag will intercept this weapon. Instant-hitting weapons such as [#BeamLaser], [#LightningCannon] and [#Rifle] cannot be targeted.",
      "defaultValue": 0,
      "type": "int"
    },
    "interceptor": {
      "description": "Bitmask representing the types of weapons that this weapon can intercept. Each digit of binary that is set to one means that a weapon with the corresponding digit in its targetable tag will be intercepted by this weapon.",
      "defaultValue": 0,
      "type": "int"
    },
    "interceptedByShieldType": {
      "description": "",
      "type": "unsigned int"
    },
    "coverage": {
      "internalName": "coverageRange",
      "description": "The radius in elmos within which an interceptor weapon will fire on targetable weapons.",
      "defaultValue": 0,
      "type": "float"
    },
    "interceptSolo": {
      "description": "If true no other interceptors may target the same projectile.",
      "defaultValue": 1,
      "type": "bool"
    },
    "dynDamageInverted": {
      "description": "If true the damage curve is inverted i.e. the weapon does more damage at greater ranges as opposed to less.",
      "defaultValue": 0,
      "type": "bool"
    },
    "dynDamageExp": {
      "description": "Exponent of the range-dependent damage formula, the default of 0.0 disables dynamic damage, 1.0 means linear scaling, 2.0 quadratic and so on.",
      "defaultValue": 0,
      "type": "float"
    },
    "dynDamageMin": {
      "description": "The minimum floor value that range-dependent damage can drop to.",
      "defaultValue": 0,
      "type": "float"
    },
    "dynDamageRange": {
      "description": "If set to non-zero values the weapon will use this value in the range-dependant damage formula instead of the actual range.",
      "defaultValue": 0,
      "type": "float"
    },
    "shield.repulser": {
      "internalName": "shieldRepulser",
      "fallbackName": "shieldRepulser",
      "description": "Does the shield repulse (deflect) projectiles or absorb them?",
      "defaultValue": 0,
      "type": "bool"
    },
    "shield.smart": {
      "internalName": "smartShield",
      "fallbackName": "smartShield",
      "description": "Determines whether or not projectiles fired by allied units can pass through the shield (true) or are intercepted as enemy weapons are (false).",
      "defaultValue": 0,
      "type": "bool"
    },
    "shield.exterior": {
      "internalName": "exteriorShield",
      "fallbackName": "exteriorShield",
      "description": "Determines whether or not projectiles fired within the shield's radius can pass through the shield (true) or are intercepted (false).",
      "defaultValue": 0,
      "type": "bool"
    },
    "shield.maxSpeed": {
      "internalName": "shieldMaxSpeed",
      "fallbackName": "shieldMaxSpeed",
      "description": "The maximum speed the repulsor will impart to deflected projectiles.",
      "defaultValue": 0,
      "type": "float"
    },
    "shield.force": {
      "internalName": "shieldForce",
      "fallbackName": "shieldForce",
      "description": "The force applied by the repulsor to the weapon - higher values will deflect weapons away at higher velocities.",
      "defaultValue": 0,
      "type": "float"
    },
    "shield.radius": {
      "internalName": "shieldRadius",
      "fallbackName": "shieldRadius",
      "description": "The radius of the circular area the shield covers.",
      "defaultValue": 0,
      "type": "float"
    },
    "shield.power": {
      "internalName": "shieldPower",
      "fallbackName": "shieldPower",
      "description": "Essentially the maximum allowed hit-points of the shield - reduced by the damage of a weapon upon impact.",
      "defaultValue": 0,
      "type": "float"
    },
    "shield.startingPower": {
      "internalName": "shieldStartingPower",
      "fallbackName": "shieldStartingPower",
      "description": "How many hit-points the shield starts with - otherwise the shield must regenerate from 0 until it reaches maximum power.",
      "defaultValue": 0,
      "type": "float"
    },
    "shield.powerRegen": {
      "internalName": "shieldPowerRegen",
      "fallbackName": "shieldPowerRegen",
      "description": "How many hit-points the shield regenerates each second.",
      "defaultValue": 0,
      "type": "float"
    },
    "shield.powerRegenEnergy": {
      "internalName": "shieldPowerRegenEnergy",
      "fallbackName": "shieldPowerRegenEnergy",
      "description": "How much energy resource is consumed to regenerate each hit-point.",
      "defaultValue": 0,
      "type": "float"
    },
    "shield.energyUse": {
      "internalName": "shieldEnergyUse",
      "fallbackName": "shieldEnergyUse",
      "description": "The amount of the energy resource consumed by the shield to absorb or repulse weapons, continually drained by a repulsor as long as the projectile is in range.",
      "defaultValue": 0,
      "type": "float"
    },
    "rechargeDelay": {
      "internalName": "shieldRechargeDelay",
      "fallbackName": "shieldRechargeDelay",
      "description": "The delay in seconds before a shield begins to regenerate after it is hit.",
      "defaultValue": 0,
      "scaleValue": 30,
      "scaleValueString": "GAME_SPEED",
      "type": "float"
    },
    "shield.interceptType": {
      "internalName": "shieldInterceptType",
      "fallbackName": "shieldInterceptType",
      "description": "Bitmask representing the types of weapons that this shield can intercept. Each digit of binary that is set to one means that a weapon with the corresponding digit in its interceptedByShieldType will be intercepted by this shield (See [[Shield Interception Tag]] Use).",
      "defaultValue": 0,
      "type": "unsigned int"
    },
    "shield.visible": {
      "internalName": "visibleShield",
      "fallbackName": "visibleShield",
      "description": "Is the shield visible or not?",
      "defaultValue": 0,
      "type": "bool"
    },
    "shield.visibleRepulse": {
      "internalName": "visibleShieldRepulse",
      "fallbackName": "visibleShieldRepulse",
      "description": "Is the (hard-coded) repulse effect rendered or not?",
      "defaultValue": 0,
      "type": "bool"
    },
    "shield.visibleHitFrames": {
      "internalName": "visibleShieldHitFrames",
      "fallbackName": "visibleShieldHitFrames",
      "description": "The number of frames a shield becomes visible for when hit.",
      "defaultValue": 0,
      "type": "int"
    },
    "shield.badColor": {
      "internalName": "shieldBadColor",
      "fallbackName": "shieldBadColor",
      "description": "The RGBA colour the shield transitions to as its hit-points are reduced towards 0.",
      "defaultValue": [ 1, 0.5, 0.5 ],
      "type": "float4"
    },
    "shield.goodColor": {
      "internalName": "shieldGoodColor",
      "fallbackName": "shieldGoodColor",
      "description": "The RGBA colour the shield transitions to as its hit-points are regenerated towards its maximum power.",
      "defaultValue": [ 0.5, 0.5, 1 ],
      "type": "float4"
    },
    "shield.alpha": {
      "internalName": "shieldAlpha",
      "fallbackName": "shieldAlpha",
      "description": "The alpha transparency of the shield whilst it is visible.",
      "defaultValue": 0.2,
      "type": "float"
    },
    "shield.armorType": {
      "internalName": "shieldArmorTypeName",
      "fallbackName": "shieldArmorType",
      "description": "Specifies the armorclass of the shield; you can input either an armorclass name OR a unitdef name to share that unit's armorclass",
      "defaultValue": default,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "model": {
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "explosionScar": {
      "defaultValue": 1,
      "type": "bool"
    },
    "alwaysVisible": {
      "defaultValue": 0,
      "type": "bool"
    },
    "cameraShake": {
      "fallbackName": "damage.default",
      "defaultValue": 0,
      "minimumValue": 0,
      "type": "float"
    },
    "smokeTrail": {
      "defaultValue": 0,
      "type": "bool"
    },
    "smokeTrailCastShadow": {
      "defaultValue": 1,
      "type": "bool"
    },
    "smokePeriod": {
      "defaultValue": 8,
      "type": "int"
    },
    "smokeTime": {
      "defaultValue": 60,
      "type": "int"
    },
    "smokeSize": {
      "defaultValue": 7,
      "type": "float"
    },
    "smokeColor": {
      "defaultValue": 0.65,
      "type": "float"
    },
    "castShadow": {
      "defaultValue": 1,
      "type": "bool"
    },
    "sizeDecay": {
      "defaultValue": 0,
      "type": "float"
    },
    "alphaDecay": {
      "defaultValue": 1,
      "type": "float"
    },
    "separation": {
      "defaultValue": 1,
      "type": "float"
    },
    "noGap": {
      "defaultValue": 1,
      "type": "bool"
    },
    "stages": {
      "defaultValue": 5,
      "type": "int"
    },
    "lodDistance": {
      "defaultValue": 1000,
      "type": "int"
    },
    "thickness": {
      "defaultValue": 2,
      "type": "float"
    },
    "coreThickness": {
      "defaultValue": 0.25,
      "type": "float"
    },
    "laserFlareSize": {
      "defaultValue": 15,
      "type": "float"
    },
    "tileLength": {
      "defaultValue": 200,
      "type": "float"
    },
    "scrollSpeed": {
      "defaultValue": 5,
      "type": "float"
    },
    "pulseSpeed": {
      "defaultValue": 1,
      "type": "float"
    },
    "beamDecay": {
      "defaultValue": 1,
      "type": "float"
    },
    "falloffRate": {
      "defaultValue": 0.5,
      "type": "float"
    },
    "hardstop": {
      "internalName": "laserHardStop",
      "defaultValue": 0,
      "type": "bool"
    },
    "rgbColor": {
      "defaultValue": [ 1, 0.5, 0 ],
      "type": "float3"
    },
    "rgbColor2": {
      "defaultValue": [ 1, 1, 1 ],
      "type": "float3"
    },
    "intensity": {
      "description": "Alpha transparency for non-model projectiles. Lower values are more opaque, but 0.0 will cause the projectile to disappear entirely.",
      "defaultValue": 0.9,
      "type": "float"
    },
    "colormap": {
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "textures.1": {
      "internalName": "textures1",
      "fallbackName": "texture1",
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "textures.2": {
      "internalName": "textures2",
      "fallbackName": "texture2",
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "textures.3": {
      "internalName": "textures3",
      "fallbackName": "texture3",
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "textures.4": {
      "internalName": "textures4",
      "fallbackName": "texture4",
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "cegTag": {
      "description": "The name, without prefixes, of a CEG to be emitted by the projectile each frame.",
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "explosionGenerator": {
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "bounceExplosionGenerator": {
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "soundTrigger": {
      "type": "bool"
    },
    "soundStart": {
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "soundHitDry": {
      "fallbackName": "soundHit",
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "soundHitWet": {
      "fallbackName": "soundHit",
      "defaultValue": ,
      "type": "std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >"
    },
    "soundStartVolume": {
      "defaultValue": -1,
      "type": "float"
    },
    "soundHitDryVolume": {
      "fallbackName": "soundHitVolume",
      "defaultValue": -1,
      "type": "float"
    },
    "soundHitWetVolume": {
      "fallbackName": "soundHitVolume",
      "defaultValue": -1,
      "type": "float"
    }
  }
}
